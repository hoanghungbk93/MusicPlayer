name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Set up Python environment for gcovr
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x

    # 3. Install dependencies
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y cmake g++ lcov python3-pip
        pip install gcovr

    # 4. Build the project
    - name: Build project
      run: |
        mkdir build
        cd build
        cmake ..
        make

    # 5. Run unit tests
    - name: Run unit tests
      run: |
        cd build
        ctest --output-on-failure

    # 6. Generate code coverage report using gcovr
    - name: Generate coverage report
      run: |
        cd build
        gcovr -r . --filter src/ --html --html-details -o reports/coverage.html

    # 7. Upload coverage report as artifact
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: build/reports/coverage.html

    # 8. Fail the job if unit tests fail
    - name: Fail the job if unit tests fail
      if: ${{ failure() }}
      run: exit 1
